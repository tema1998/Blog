version: "2"

services:
  tb_project:
    image: tb_docker:latest
    container_name: tb_project
    depends_on:
      tb_postgres:
        condition: service_healthy
    volumes:
      - static_volume:/topblog/static
      - media_volume:/topblog/media
    env_file:
      - .env
    restart: always
    command: >
      bash -c "python3 manage.py collectstatic --noinput && python3 manage.py makemigrations && python3 manage.py migrate  && gunicorn -b 0.0.0.0:8000 topblog.wsgi:application"

  tb_daphne:
    user: root
    image: tb_docker:latest
    container_name: tb_daphne
    env_file:
      - .env
    depends_on:
      - redis
      - tb_project
    restart: always
    links:
      - redis
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
    command: >
      bash -c "daphne -e ssl:8001:privateKey=/etc/letsencrypt/live/artem-vol.ru/privkey.pem:certKey=/etc/letsencrypt/live/artem-vol.ru/fullchain.pem  topblog.asgi:application"

  tb_postgres:
    image: postgres:15
    container_name: tb_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'" ]
      interval: 10s
      timeout: 3s
      retries: 8
    restart: always
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    env_file:
      - .env

  redis:
    image: redis:alpine
    container_name: redis

  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./nginx/
    container_name: tb_nginx
    volumes:
      - static_volume:/topblog/static
      - media_volume:/topblog/media
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - tb_project
      - tb_daphne
    links:
      - tb_daphne
      - tb_project
    restart: always
    ports:
      - "${NGINX_EXTERNAL_PORT}:80"
      - "${NGINX_EXTERNAL_SSL_PORT}:443"

  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

volumes:
  pgdbdata:
  static_volume:
  media_volume: